name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # build:
  #   needs: unit-testing
  #   name: Build release version
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Installing toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #     - name: Build the project
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: build
  #         args: --release --all-features

  # unit-testing:
  #   name: Unit testing
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Installing toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #     - name: Run unit tests
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: test

  server-deployment:
    # needs: [build, unit-testing]
    name: Server deployment
    runs-on: ubuntu-latest
    steps:
      - name: Deploy server software
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            # Go to the working directory
            cd ${{ secrets.WORK_DIR }}

            # Shut down docker-compose
            docker compose down

            # Checkout branch
            git checkout ${{ secrets.MAIN_BRANCH }}

            # Pull latest changes
            git pull

            # Stop and remove all docker containers
            docker rm -f $(docker ps -aq)

            # Remove all docker images
            docker rmi -f $(docker images -aq)

            # Start docker compose
            docker compose up
